import{useRef as e,useState as t,useEffect as i}from"react";const n=({direction:e,move:t})=>React.createElement("svg",{className:"next"===e?"next":"prev",viewBox:"0 0 100 100",style:{width:"2rem",height:"2rem"},onClick:t},React.createElement("polyline",{points:"next"===e?"0 100 50 50 0 0":"100 0 50 50 100 100",style:{pointerEvents:"none"}})),a=({move:e,data:t,config:i})=>React.createElement("div",{className:"select",style:{position:"absolute",display:"flex"}},t.map(((t,n)=>React.createElement("div",{key:n+1,onClick:t=>{e(n)},className:i.index===(i.xScroll?n:n+1)?"selection selected":"selection "},i.xScroll?React.createElement("img",{src:t.acf.cover,alt:""}):n+1)))),s=({move:e,data:t,config:i})=>React.createElement("div",{className:"slider-controls",style:{fill:"none",stroke:"white",strokeMiterlimit:"10",strokeWidth:"10px",position:"absolute",zIndex:"500",width:"100%",height:"100%",display:"flex",alignItems:"center",justifyContent:"space-between"}},React.createElement(n,{move:()=>{e("prev")},direction:"prev"}),React.createElement(n,{move:()=>{e("next")},direction:"next"}),React.createElement(a,{move:e,data:t,config:i}));function l({slide:e}){return React.createElement("div",{className:"slide",style:{position:"relative",["Y"===e.axis?"minHeight":"minWidth"]:"100%"}},e.template)}const r=({slides:e,config:t})=>React.createElement("div",{className:"slider-feed",style:{display:"flex",height:"100%",flexDirection:"X"===t.axis?"row":"column",transform:`translate${t.axis}(${-("X"===t.axis?t.clientWidth:t.clientHeight)*t.index}px)`,transition:"next"===t.direction&&t.index<=1||"prev"===t.direction&&t.index>=e.length-2?"none":t.transition+"ms"}},e.map(((e,i)=>React.createElement(l,{key:i,slide:{...e,index:i,axis:t.axis,template:t.template(e,i)}})))),c=({cards:e,config:t})=>React.createElement("div",{className:"slider-x-scroll",style:{display:"flex",height:"100%",flexDirection:"X"===t.axis?"row":"column",transform:t.transform?t.transform:`translate${t.axis}(${-("X"===t.axis?t.clientWidth:t.clientHeight)*t.index}px)`,transition:t.transition+"ms"}},e.map(((e,i)=>React.createElement(Card,{key:i,card:{...e,index:i,axis:t.axis,cardSize:t.cardSize,template:t.template(e,i)},currentIndex:t.index})))),d=n=>{const a=e(null),[l,d]=t({axis:n.axis?n.axis:"X",transition:n.transition?n.transition:400,controls:!!n.controls&&n.controls,index:n.cards?0:1,xScroll:!!n.cards,cardSize:n.cardSize?n.cardSize+"%":"100%",transform:null,template:n.template?n.template:e=>React.createElement("div",null," Slide: ",e)}),o=()=>{d((e=>({...e,clientWidth:a.current.clientWidth,clientHeight:a.current.clientHeight})))};return i((()=>{o(),window.addEventListener("resize",o)}),[]),React.createElement("div",{className:"slider-js",ref:a,style:{position:"relative",overflow:"hidden"}},l.controls?React.createElement(s,{move:e=>{if(n.cards){function t(e,t){let i="X"===e.axis?e.clientWidth:e.clientHeight;i/=100/n.cardSize;let a=i*-t;return console.log(t,a),`translate${e.axis}(${a}px)`}"next"===e&&l.index<n.cards.length-1?d((i=>({...i,direction:e,transform:t(i,i.index+1),index:i.index+1}))):"prev"===e&&l.index>0?d((i=>({...i,direction:e,transform:t(i,i.index-1),index:i.index-1}))):"number"==typeof e&&d((i=>({...i,direction:void 0,transform:t(i,e),index:e})))}else n.slides&&d((t=>"next"===e?{...t,direction:e,index:t.index>=n.slides.length+1?1:t.index+1}:"prev"===e?{...t,direction:e,index:t.index<=0?n.slides.length:t.index-1}:"number"==typeof e?{...t,direction:void 0,index:e+1}:void 0))},data:n.cards?n.cards:n.slides,config:l}):"",n.cards?React.createElement(c,{config:l,cards:n.cards}):"",n.slides?React.createElement(r,{config:l,slides:[n.slides[n.slides.length-1],...n.slides,n.slides[0]]}):"")};export{d as Slider};
